/*  LoadingScene.cs
 *  The blueprints for the loading scene
 *  
 *  Revision History:
 *      Ryan Beausoleil, 2018.12.01: Created
 */
using CustomXna.Framework;
using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Graphics;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace RBeausoleilPROG2370FinalAssignment.Scenes
{
    public class LoadingScene : Scene
    {
        public override void LoadContent()
        {
            GameObject camera = FindGameObjectByTag((int)GameObjectTag.Camera);
            camera.Transform.Position = new Vector3(0.0f, -15.0f, 6.0f);
            camera.Transform.Rotation = Quaternion.CreateFromAxisAngle(camera.Transform.Right, MathHelper.ToRadians(75.0f));

            CameraViewController cameraViewController = FindObjectByType<CameraViewController>();
            if (cameraViewController != null)
            {
                cameraViewController.Enabled = false;
            }

            FindGameObjectByTag((int)GameObjectTag.Player).SetActive(false);

            // Terrain
            GameObject terrain = GameObject.Instantiate(Game);
            terrain.Transform.Position = new Vector3(-80, 150, 0);
            terrain.Transform.Scale = 2;
            TerrainTextureGrid2D terrainComponent = terrain.AddComponent<TerrainTextureGrid2D>() as TerrainTextureGrid2D;
            terrainComponent.Texture = Game.Content.Load<Texture2D>("tiles");
            terrainComponent.TextureSetX = 8;
            terrainComponent.TextureSetY = 8;
            terrainComponent.SetGrid(new ushort?[,]
            {
                { 0,2,3,1,2,0,2,1,0,2,3,0,2,3,2,1,2,1,3,1,3,2,1,3,2,2,0,1,2,0,1,3,0,2,0,3,0,2,1,0,2,0,2,3,0,1,0,1,3,2,0,2,3,0,0,0,2,2,1,3,2,1,2,2,1,2,3,3,1,2,1,0,3,1,0,0,2,2,0,3 },
                { 0,2,2,2,0,1,0,2,3,0,1,0,2,0,2,1,3,0,1,1,1,1,0,3,3,3,1,3,1,1,1,2,1,1,2,1,0,3,0,2,1,2,1,1,3,2,3,3,3,1,1,2,0,0,3,1,3,1,1,0,3,2,2,2,0,0,3,3,0,1,0,3,1,2,3,1,3,3,1,3 },
                { 3,3,2,0,2,1,0,0,0,0,3,3,2,2,2,1,0,2,2,3,2,3,0,3,2,0,1,0,3,2,2,1,2,2,0,2,1,0,3,1,3,2,3,3,2,0,0,1,1,2,1,2,0,3,0,1,0,1,3,2,3,0,3,0,1,2,1,1,3,0,0,2,3,1,2,3,3,0,3,1 },
                { 3,0,1,3,3,2,2,0,2,0,0,0,0,0,2,2,2,2,3,3,1,2,3,0,2,3,3,0,0,3,0,0,1,1,0,3,0,2,1,1,0,3,1,2,2,2,3,0,2,2,1,3,0,2,1,3,0,0,1,1,3,3,0,3,1,2,1,3,2,2,0,1,3,0,1,0,1,1,2,1 },
                { 1,3,1,3,3,0,3,0,0,1,0,3,2,1,3,1,0,2,3,1,0,1,2,1,1,3,0,2,3,0,0,1,0,0,1,1,3,0,2,0,2,2,3,1,0,1,2,1,0,1,2,0,1,1,0,3,2,3,2,0,0,1,0,3,0,1,0,1,3,0,0,3,0,0,1,1,1,3,2,0 },
                { 3,3,2,2,0,1,2,1,0,3,2,2,3,3,1,3,0,2,3,3,1,2,2,3,2,3,1,1,0,1,0,0,3,3,0,2,1,0,1,2,1,3,3,0,2,1,2,0,1,0,0,1,0,1,2,1,2,3,2,2,3,0,2,3,0,3,0,0,2,3,3,1,0,3,2,0,3,0,2,0 },
                { 0,2,1,2,1,3,1,1,0,0,2,0,2,2,1,3,0,1,0,3,1,3,2,1,0,3,3,1,2,3,1,1,2,2,2,2,1,0,3,3,3,0,2,3,1,1,3,0,0,2,2,0,1,0,0,0,0,2,3,2,2,1,3,1,2,3,2,1,2,2,2,2,3,3,2,1,1,1,3,3 },
                { 0,2,3,2,2,1,0,1,1,1,0,0,3,2,0,1,0,1,0,1,0,0,0,3,1,1,0,3,2,3,0,1,0,1,3,0,2,3,0,1,0,1,3,3,1,3,1,1,3,1,2,1,0,2,0,0,1,0,1,0,1,2,1,3,3,1,1,0,1,0,2,3,0,3,1,2,0,2,2,2 },
                { 3,3,0,3,2,0,1,0,0,3,1,3,1,2,0,2,2,1,2,3,3,3,1,1,0,2,2,2,2,1,1,2,0,2,1,0,0,1,2,3,1,0,1,2,2,2,2,2,3,2,0,2,0,3,1,1,1,0,3,0,2,2,2,0,1,0,1,2,2,1,3,1,3,3,2,2,1,0,3,3 },
                { 1,1,3,1,1,3,1,3,3,3,0,1,3,1,2,2,3,0,1,2,2,0,0,0,3,1,2,2,2,3,3,0,2,0,3,3,3,1,0,0,2,3,0,0,3,3,3,0,1,2,1,1,3,0,1,0,2,0,1,1,0,0,1,0,2,3,0,0,2,1,1,3,2,0,1,1,2,3,3,1 },
                { 2,1,0,1,3,0,1,2,3,0,0,1,2,2,1,1,3,2,1,2,2,0,0,1,2,0,3,2,1,0,1,2,1,0,0,2,1,0,2,2,3,3,1,3,2,1,0,1,2,3,0,0,1,1,2,1,2,3,1,0,3,1,2,2,0,0,2,2,3,3,3,0,2,2,3,1,0,3,3,3 },
                { 3,1,0,0,1,2,0,2,2,1,1,2,3,0,1,0,1,0,3,3,3,1,3,1,0,2,2,0,2,2,0,2,3,3,2,2,1,3,2,0,2,3,1,0,2,3,2,2,3,2,1,3,1,3,1,1,1,0,1,0,0,3,0,3,3,2,1,0,3,0,2,1,2,2,1,1,0,3,3,3 },
                { 3,1,1,3,2,1,0,3,3,0,2,3,3,0,0,0,0,2,0,1,0,3,1,1,1,2,2,3,2,3,3,3,0,1,2,0,3,2,0,3,0,3,0,3,2,2,2,0,3,3,1,0,1,2,3,3,0,2,2,3,0,2,3,2,0,0,0,2,1,3,1,0,0,3,0,0,0,1,2,3 },
                { 1,3,1,0,0,2,3,0,2,0,0,1,3,3,2,2,3,3,0,3,3,0,3,0,0,3,1,1,2,2,2,1,1,0,1,0,3,1,2,2,3,0,3,2,3,3,2,2,1,0,2,1,0,3,3,3,0,0,2,3,2,0,1,0,3,1,3,0,0,2,3,2,2,1,0,3,3,1,1,1 },
                { 0,2,1,2,3,3,2,1,1,1,1,3,0,0,2,3,1,3,0,3,0,2,1,1,2,3,1,3,0,1,1,1,1,3,1,0,0,3,0,3,1,3,1,1,1,0,1,1,3,2,2,2,0,2,2,3,0,1,0,0,3,2,3,0,0,2,2,2,2,0,0,2,1,1,3,3,1,3,1,1 },
                { 2,0,3,0,1,2,3,0,1,0,3,1,0,3,1,2,3,1,1,0,1,0,2,2,2,0,1,0,0,2,2,0,0,1,1,1,3,3,2,3,3,2,0,3,0,2,2,3,3,1,3,2,2,3,2,2,2,1,0,2,0,0,2,3,1,1,0,2,2,2,3,0,1,2,2,3,1,1,2,3 },
                { 1,3,0,3,1,0,1,2,3,3,1,1,2,3,3,1,1,1,3,0,2,1,0,0,2,0,1,3,1,0,3,0,2,0,0,2,2,1,1,3,2,3,2,1,0,2,2,3,0,1,0,3,3,0,2,0,3,1,3,0,2,3,0,2,2,3,1,3,0,0,1,3,0,1,3,1,3,1,1,0 },
                { 0,0,1,2,0,3,0,1,1,0,1,2,2,1,0,2,2,3,3,3,2,3,0,3,3,2,3,0,1,3,0,3,1,3,1,0,0,1,2,2,0,1,0,2,0,3,2,0,3,3,1,1,1,0,0,0,3,0,1,0,3,0,0,0,3,0,1,1,2,0,0,0,0,3,1,3,0,2,1,0 },
                { 3,1,0,0,1,0,1,0,3,2,2,1,2,2,3,0,2,3,1,2,3,0,1,2,1,3,3,2,2,0,0,0,0,1,0,0,1,0,1,2,3,1,3,2,3,3,2,2,1,3,3,1,3,1,2,0,2,0,0,2,3,2,3,3,1,3,2,3,3,1,3,0,2,0,0,0,0,2,0,2 },
                { 1,3,2,3,2,1,3,1,3,2,1,2,3,1,1,1,0,3,1,0,1,1,0,3,2,1,2,1,3,2,3,0,0,3,1,0,1,1,1,1,2,1,1,3,1,1,3,2,3,0,2,3,1,2,1,3,2,0,3,1,2,1,0,2,2,2,2,3,3,2,1,2,2,1,0,0,0,1,2,0 },
                { 1,2,2,2,1,0,1,0,0,0,0,2,2,1,3,2,2,3,1,2,0,1,3,0,1,1,2,2,0,0,3,3,1,0,1,1,2,3,1,1,0,0,0,2,3,3,0,0,1,0,3,0,3,3,0,1,0,0,3,0,1,3,3,1,0,1,2,2,0,3,1,0,3,1,3,3,2,3,3,3 },
                { 3,1,0,0,2,3,2,2,2,3,2,2,2,1,2,2,3,0,0,2,3,1,3,2,0,2,1,2,1,3,0,0,3,2,3,1,0,1,1,2,3,1,0,1,2,0,3,3,1,3,3,2,3,1,0,3,1,2,2,1,1,1,1,1,3,0,2,3,3,2,2,1,2,1,1,0,3,0,2,0 },
                { 1,3,0,1,1,1,2,1,1,1,2,0,3,2,0,1,0,1,2,1,0,0,1,0,1,2,0,2,1,3,0,3,0,3,3,1,1,0,1,1,1,1,2,2,3,3,3,2,0,2,3,1,2,0,2,2,0,0,2,2,3,3,1,1,2,3,3,2,1,1,3,3,0,2,3,1,2,3,0,2 },
                { 0,2,1,1,0,1,2,1,1,2,0,1,2,1,0,3,0,2,2,1,2,2,3,2,2,0,0,0,2,1,0,1,3,0,0,3,0,3,1,2,1,3,1,0,0,1,2,0,3,1,1,2,3,2,1,3,0,3,3,1,1,1,3,0,2,2,2,0,2,1,3,2,3,2,0,3,0,0,2,3 },
                { 3,3,2,2,0,1,1,3,0,1,2,0,2,1,3,3,1,1,3,0,1,1,0,2,2,3,3,0,1,1,1,0,1,0,1,1,2,3,3,0,1,3,3,1,0,2,0,2,3,1,0,1,2,0,1,2,1,0,0,2,0,1,3,1,1,2,2,2,0,3,3,2,0,2,0,0,1,1,2,2 },
                { 3,1,0,0,1,1,2,1,1,0,0,3,2,3,0,0,1,3,0,1,3,1,1,3,0,2,0,0,3,0,3,2,2,0,1,2,3,3,2,3,2,2,2,3,1,2,2,1,1,2,3,1,3,1,3,1,2,1,0,1,3,1,3,3,3,0,2,0,3,1,3,2,0,3,3,0,2,3,0,1 },
                { 0,2,2,3,0,3,0,2,1,3,0,3,0,1,1,0,2,3,2,3,1,1,0,1,3,3,2,2,3,1,1,2,3,0,1,1,1,1,2,2,0,0,0,0,0,0,3,3,1,1,2,0,1,0,3,3,3,3,1,0,0,3,3,0,1,2,0,0,0,1,1,0,1,2,3,3,0,2,3,1 },
                { 0,2,0,3,3,0,2,1,1,2,1,2,0,1,0,2,1,3,3,2,0,0,3,0,1,0,0,1,2,1,1,3,3,2,2,0,0,0,3,3,0,2,2,3,3,0,1,2,0,1,1,0,3,3,0,3,3,3,1,0,2,1,2,3,2,3,1,0,1,0,0,0,2,0,1,3,1,1,2,2 },
                { 2,2,3,0,0,1,0,0,3,3,1,2,3,2,3,2,3,1,2,1,0,3,2,2,2,1,1,3,1,3,3,3,2,2,2,2,0,0,2,2,1,3,1,1,0,1,3,1,2,2,3,0,0,1,3,1,2,3,0,0,3,1,0,1,0,3,3,1,3,2,1,1,1,0,3,1,1,3,2,3 },
                { 0,3,1,3,3,3,2,0,2,1,2,3,2,3,3,2,3,0,1,1,2,3,0,2,2,1,0,3,0,2,0,3,1,0,1,3,0,3,3,3,0,1,2,3,0,0,2,3,1,0,0,3,2,2,0,1,2,1,1,1,0,1,0,0,0,2,2,0,2,0,1,1,1,0,0,0,0,2,3,3 },
                { 1,1,1,0,0,3,2,3,3,2,3,2,3,3,1,2,1,3,0,2,1,3,0,2,1,2,2,3,1,0,0,2,2,3,0,1,0,2,0,2,2,2,1,2,3,0,2,1,1,1,3,3,2,2,1,0,1,0,2,3,1,1,2,2,2,0,0,2,0,2,2,3,2,0,3,3,2,3,0,3 },
                { 0,3,0,3,3,0,3,3,3,3,0,2,0,0,1,2,1,0,0,3,1,3,0,0,2,1,1,2,1,0,1,3,1,0,3,1,2,1,2,0,0,2,0,0,2,1,0,3,3,0,0,1,1,2,3,2,3,0,1,1,3,2,0,1,3,2,1,3,3,2,1,0,2,3,2,2,0,0,0,1 },
                { 1,3,0,1,0,1,0,2,0,2,2,1,0,3,1,1,0,2,3,0,0,3,0,1,1,3,2,0,0,1,3,0,2,0,2,1,2,1,2,0,0,0,2,3,2,3,0,1,1,2,3,2,3,2,2,0,3,2,1,1,0,1,1,0,2,2,1,0,2,0,0,1,0,1,0,3,1,3,3,3 },
                { 2,0,2,3,0,0,2,0,0,1,0,1,2,3,0,1,1,3,3,2,0,1,1,3,2,2,2,3,2,0,0,1,2,0,1,2,0,2,2,2,0,0,2,2,3,0,1,0,1,1,3,2,1,2,3,2,2,0,0,1,3,0,3,3,0,1,0,3,3,0,3,3,3,2,2,1,0,1,1,1 },
                { 3,3,2,3,3,1,0,3,1,0,1,0,1,0,3,1,3,1,0,1,0,1,2,0,3,2,1,1,3,0,2,1,2,3,3,1,1,1,0,3,3,3,1,1,1,1,1,3,0,0,2,3,0,0,3,3,2,1,0,2,0,0,1,2,2,2,1,2,3,1,1,1,1,1,0,2,2,1,3,1 },
                { 1,3,3,1,2,1,1,3,3,2,0,1,0,2,2,1,1,0,1,2,2,1,0,1,2,0,3,3,0,3,3,3,0,2,0,1,3,0,1,0,3,2,2,1,0,3,1,3,2,2,2,2,3,2,2,1,2,2,3,0,2,0,3,1,2,2,2,0,3,0,1,2,3,0,1,0,0,3,0,0 },
                { 3,1,1,0,0,0,2,3,2,3,3,1,3,2,2,3,2,3,3,1,1,0,2,0,2,2,1,2,0,1,0,3,3,1,3,1,0,3,1,2,0,0,2,0,1,1,0,0,1,1,3,2,0,2,0,2,0,3,0,2,1,3,3,0,0,1,3,3,1,0,2,3,2,0,3,0,2,3,0,2 },
                { 1,2,2,3,3,2,0,0,1,1,1,3,1,3,2,3,3,1,0,3,2,2,1,0,2,3,0,2,2,1,2,3,0,3,2,1,1,3,1,1,2,3,0,3,3,2,3,1,2,2,1,3,0,1,3,0,1,2,0,2,0,2,0,2,0,0,1,2,0,3,1,3,2,2,1,0,2,2,0,2 },
                { 0,3,2,3,0,2,1,3,3,0,3,3,3,3,1,1,3,3,2,3,1,2,1,2,1,2,1,3,3,1,2,0,2,1,0,2,1,3,3,1,0,3,3,1,2,0,3,1,3,0,0,3,1,3,0,2,0,0,1,0,1,1,0,3,3,0,1,2,2,2,3,3,0,1,2,0,1,1,3,3 },
                { 0,3,1,2,2,0,1,1,3,2,2,2,3,0,2,2,1,3,2,0,1,3,2,0,3,2,2,2,2,2,3,2,3,0,0,0,0,2,1,2,0,0,1,1,3,1,0,0,2,2,0,0,1,3,3,2,1,1,1,1,2,1,3,3,1,0,2,3,2,2,0,2,3,3,1,1,2,3,1,1 },
                { 0,3,1,0,0,2,0,0,0,2,2,2,0,2,3,1,2,3,0,1,1,1,2,2,0,0,3,0,2,0,1,2,0,1,1,1,3,2,3,3,2,2,3,1,0,3,1,2,1,0,0,2,1,3,2,2,2,0,3,1,0,2,0,3,1,1,3,3,3,1,2,3,0,0,0,3,1,2,3,3 },
                { 1,3,2,0,1,0,3,3,1,3,1,3,2,0,3,3,0,3,3,2,1,1,2,3,3,1,2,1,1,2,0,3,1,3,3,3,3,3,1,1,2,0,3,2,3,0,1,0,2,0,1,0,0,0,1,2,3,0,1,2,1,1,0,3,2,3,1,3,3,3,0,2,3,2,3,3,0,0,0,1 },
                { 3,1,1,3,1,1,1,2,2,3,1,0,2,1,1,1,0,0,0,1,3,0,0,2,0,0,2,0,1,2,1,0,1,2,3,0,1,1,1,3,3,3,1,3,1,0,3,2,1,3,2,0,2,0,2,2,3,0,2,1,2,1,2,3,1,3,1,0,0,0,2,0,1,1,2,2,0,3,0,1 },
                { 1,0,1,0,2,1,3,3,2,3,2,1,1,2,0,2,1,2,2,3,2,2,2,3,1,3,2,1,1,3,3,3,1,1,2,3,3,0,2,1,0,0,0,1,2,1,3,0,2,3,2,1,2,3,0,2,1,0,1,1,1,1,2,3,3,1,2,1,3,3,3,2,3,0,2,2,2,1,0,0 },
                { 1,1,2,0,3,2,3,2,1,2,2,3,3,2,0,3,3,2,1,0,2,1,3,3,1,2,3,0,2,3,0,3,3,0,0,2,1,0,0,0,3,2,3,0,1,3,1,1,3,1,3,0,2,3,2,2,3,2,2,1,0,3,0,2,3,0,0,2,2,3,0,2,1,3,1,3,1,0,3,2 },
                { 0,1,2,0,1,2,0,2,0,2,2,0,0,0,2,1,0,0,2,2,3,2,0,1,0,1,3,3,2,0,0,3,1,1,1,3,2,3,1,0,2,3,0,0,3,3,2,2,2,0,2,0,2,1,0,0,2,1,0,0,3,2,0,3,3,2,2,0,3,0,3,3,3,3,0,0,2,3,3,3 },
                { 1,1,3,2,1,2,0,1,2,1,0,0,2,1,2,1,0,3,3,2,0,0,2,1,2,1,2,1,2,3,3,1,0,0,2,1,0,2,1,0,1,3,3,2,3,2,0,2,2,1,0,1,2,1,3,3,0,3,0,3,2,3,1,2,0,1,3,2,0,0,3,3,3,2,2,2,3,2,1,1 },
                { 1,0,0,2,2,2,1,2,1,2,3,0,3,3,3,0,1,1,1,1,3,0,1,2,3,2,2,1,1,3,3,0,2,1,3,0,2,1,3,0,1,2,3,1,1,1,3,3,0,3,0,0,1,1,1,0,2,1,1,0,1,1,1,3,1,2,0,3,2,0,1,2,2,3,1,3,0,1,3,0 },
                { 1,0,0,0,2,0,2,1,1,2,2,0,2,2,3,1,3,1,0,3,0,3,3,1,0,3,3,2,0,2,3,0,0,1,3,3,3,0,1,0,1,2,3,0,2,3,0,0,2,0,2,0,3,2,3,3,1,3,3,1,1,1,1,2,0,2,0,0,1,0,1,0,0,1,1,3,1,2,0,1 },
                { 2,0,0,0,1,3,3,2,3,3,0,2,2,0,1,0,1,1,2,0,1,3,1,3,2,1,0,2,1,2,3,2,1,1,3,2,2,3,1,2,2,1,3,2,1,2,3,2,0,0,0,3,2,3,0,0,2,2,3,1,3,0,0,0,2,2,0,3,0,1,0,2,1,2,2,0,0,1,0,3 },
                { 1,1,2,0,3,0,2,3,1,3,3,1,0,0,1,2,1,1,0,1,1,1,3,0,2,1,2,0,3,2,2,2,1,2,0,3,0,1,2,0,1,2,1,3,3,1,0,3,0,1,3,2,0,2,0,2,2,3,0,1,3,0,0,3,2,2,0,1,1,0,2,1,1,2,2,2,0,0,2,2 },
                { 1,3,2,0,3,1,1,3,2,3,1,3,0,2,3,3,2,1,0,1,2,1,0,3,1,1,1,3,3,0,0,3,2,2,2,3,0,0,1,1,3,2,1,0,2,1,1,3,1,1,2,3,0,0,0,2,1,1,0,3,0,2,3,2,2,0,0,0,0,3,1,2,3,1,3,3,1,0,3,1 },
                { 1,2,2,1,3,2,2,1,2,0,3,3,0,3,3,3,0,3,1,1,2,0,3,3,3,1,3,3,1,2,0,0,3,2,1,0,1,1,2,0,0,3,1,3,1,2,3,2,0,2,3,3,0,2,2,1,0,1,3,3,2,3,2,3,3,0,0,1,1,3,3,0,2,1,1,0,3,1,1,1 },
                { 3,3,1,3,3,3,3,0,2,1,2,2,1,2,1,3,3,2,2,3,3,2,0,3,0,2,2,2,0,1,2,0,1,0,2,3,3,1,0,3,3,0,3,2,2,1,3,2,3,3,2,1,0,2,1,3,3,1,0,3,2,3,1,0,0,1,0,2,2,2,0,0,1,0,1,2,2,1,1,1 },
                { 3,0,3,1,3,2,1,3,0,3,2,1,2,0,2,2,2,1,3,3,1,0,3,3,3,0,3,1,1,2,1,1,0,2,1,2,2,0,3,0,3,2,0,0,0,1,2,1,3,0,1,2,1,0,1,0,1,1,3,2,1,1,3,1,0,0,1,1,1,1,1,0,3,3,3,0,0,2,2,3 },
                { 1,0,3,1,0,0,0,3,2,3,0,2,3,2,3,2,2,0,2,2,3,1,1,1,1,0,2,3,0,0,1,2,1,0,0,1,0,0,3,1,3,3,1,2,1,1,0,2,1,3,0,0,3,2,3,1,1,0,3,1,0,3,1,0,2,2,0,3,1,0,2,2,1,3,2,3,2,1,1,2 },
                { 3,3,1,0,3,3,2,1,2,2,2,3,2,1,2,0,3,3,3,3,1,1,3,3,1,0,0,1,0,1,0,2,0,1,2,0,3,2,3,1,3,1,2,3,3,3,3,1,2,2,1,1,2,3,0,3,2,0,2,1,0,2,0,0,1,0,0,0,3,0,0,3,0,0,3,0,0,3,1,1 },
                { 2,0,0,2,2,3,1,2,2,1,3,2,3,1,2,1,3,3,0,1,3,1,0,0,0,0,1,0,1,1,1,0,3,2,0,3,0,1,1,3,1,3,1,2,2,2,2,0,2,0,0,0,0,0,3,1,3,2,3,1,1,3,0,0,2,3,2,0,1,2,0,0,3,2,2,0,3,3,1,2 },
                { 3,0,3,1,3,1,1,0,1,3,1,3,1,2,2,3,0,0,3,2,3,1,3,2,3,0,0,0,3,1,3,3,3,1,2,2,2,2,1,0,3,3,1,0,1,3,2,1,2,0,1,2,2,1,3,0,3,3,0,2,2,2,1,2,3,0,2,1,1,2,0,2,3,1,1,0,0,3,0,3 },
                { 1,2,1,2,1,2,0,2,3,0,1,0,3,1,3,1,2,3,2,3,0,3,0,1,1,1,3,1,0,3,0,3,1,3,0,2,0,1,0,1,0,0,0,2,3,2,0,3,3,2,2,3,1,0,0,1,0,2,1,2,1,3,0,3,1,0,1,1,0,3,1,0,3,1,2,1,3,0,1,3 },
                { 2,1,3,3,3,2,2,2,2,1,2,2,2,1,3,1,1,3,3,0,3,1,1,1,3,0,3,2,0,0,2,1,3,3,3,0,0,2,2,0,1,3,3,3,2,0,3,1,3,3,1,0,2,1,3,1,3,0,1,1,3,1,3,3,3,1,3,0,2,1,1,0,2,0,2,0,3,1,3,3 },
                { 0,0,0,3,1,3,3,3,0,2,0,2,1,1,0,3,1,1,0,0,0,3,3,0,3,2,3,0,3,2,0,2,3,3,3,2,0,0,3,0,3,1,3,0,2,1,1,2,0,0,1,0,1,1,3,0,1,3,1,1,3,3,0,2,3,0,0,1,1,2,1,2,1,2,0,2,3,3,0,0 },
                { 2,3,3,2,1,3,0,0,1,1,3,1,3,0,2,1,3,0,2,3,0,1,1,1,2,3,3,3,0,3,0,1,1,3,1,1,1,2,2,2,3,2,1,2,1,2,1,0,0,3,2,1,3,1,0,2,2,1,0,0,1,0,1,1,2,2,1,3,2,2,0,2,2,3,1,0,3,2,0,2 },
                { 2,0,2,3,2,0,3,0,1,1,2,1,1,0,3,3,2,1,0,2,0,3,0,2,2,1,2,2,1,2,1,3,2,1,3,0,3,2,2,3,1,3,3,3,2,2,3,3,1,2,0,2,1,0,1,3,3,3,1,2,2,1,2,3,1,1,3,2,3,0,2,0,1,3,2,2,1,1,0,3 },
                { 3,0,1,2,1,3,2,0,3,1,1,2,3,3,0,0,1,1,0,3,1,1,3,2,1,3,3,2,0,3,2,2,0,1,2,1,2,3,0,2,3,1,2,1,3,3,1,3,3,0,1,2,1,1,3,3,1,0,3,1,2,2,2,1,0,2,3,1,2,3,3,0,3,0,2,2,0,0,2,2 },
                { 2,2,3,2,1,2,1,2,3,0,3,3,2,0,3,2,0,1,0,2,0,1,3,0,3,3,2,0,0,3,0,3,3,3,0,0,3,2,3,1,2,1,0,2,0,0,3,2,2,2,3,3,0,2,3,3,3,2,0,2,3,3,1,0,0,2,1,2,0,1,2,0,0,2,0,3,0,2,3,1 },
                { 2,2,3,3,1,0,0,2,0,1,3,1,2,0,3,3,1,3,3,2,2,2,3,0,3,2,0,3,2,1,1,2,0,3,3,1,2,1,3,3,2,2,2,0,0,3,2,1,2,0,1,0,2,1,3,0,1,2,3,2,0,2,3,2,1,3,0,0,0,3,2,0,1,0,1,1,2,3,3,3 },
                { 0,1,2,3,1,3,2,2,3,2,1,2,1,3,0,2,3,2,0,2,3,1,3,1,3,0,3,0,3,3,3,1,1,0,0,1,3,0,2,0,0,3,1,0,3,2,1,0,2,2,2,2,0,0,0,1,1,1,2,1,0,1,3,3,3,2,3,2,1,2,2,0,1,0,1,2,3,3,0,2 },
                { 2,0,2,0,1,0,3,1,3,3,2,0,1,3,2,0,3,3,0,1,3,3,0,0,1,1,3,3,2,2,0,3,2,1,2,3,1,3,2,3,0,0,1,1,1,2,1,3,1,3,3,1,0,2,3,0,1,2,2,1,1,3,0,1,1,3,2,2,0,1,1,1,0,3,3,1,0,0,1,3 },
                { 3,2,2,0,1,1,0,3,3,2,1,1,0,1,3,1,0,3,2,0,2,0,1,3,3,3,2,0,3,1,2,1,0,1,0,2,0,3,2,2,2,1,3,0,1,1,3,1,0,3,0,0,1,0,3,2,2,3,1,3,0,2,0,3,1,3,0,2,3,0,3,0,2,0,1,2,0,3,1,1 },
                { 2,2,1,0,0,1,0,1,2,0,0,3,0,0,2,2,3,1,1,3,3,3,3,1,3,2,3,1,3,0,2,0,0,0,2,0,3,3,0,1,2,2,1,2,3,1,1,2,2,3,3,0,1,1,1,3,1,1,0,0,2,1,3,3,0,0,1,2,1,1,1,1,2,2,2,2,2,2,2,0 },
                { 3,0,1,3,2,1,0,2,1,2,0,2,1,3,1,1,2,0,2,1,3,3,3,0,0,1,1,1,2,3,0,0,1,1,1,0,0,2,3,2,3,3,1,2,0,3,2,2,1,2,2,3,3,2,3,0,1,3,2,2,1,1,0,0,2,3,0,1,3,0,3,0,2,3,2,0,0,3,1,2 },
                { 3,1,3,3,0,0,3,2,2,3,2,3,2,1,3,0,2,2,1,3,1,0,3,0,1,3,2,0,2,2,2,3,2,1,0,1,2,2,3,1,3,2,0,0,1,2,2,2,3,2,1,1,0,1,0,2,2,3,0,3,1,3,3,0,0,0,3,3,3,1,0,1,0,1,3,3,2,1,2,1 },
                { 2,2,2,1,3,0,0,3,3,3,0,2,3,2,1,1,0,0,2,1,2,1,3,2,2,1,1,0,0,1,1,1,1,0,0,3,0,2,3,3,2,0,2,0,0,1,1,1,2,1,2,0,1,1,3,2,1,3,2,1,0,1,3,0,0,2,3,3,0,2,3,2,2,0,2,2,1,2,3,0 },
                { 1,3,1,2,1,3,3,1,3,0,3,3,3,2,2,3,2,0,0,2,0,0,2,1,2,1,3,1,1,1,2,1,3,1,3,2,2,3,2,1,0,3,2,2,1,1,2,3,1,3,2,0,3,2,3,0,3,0,0,0,1,3,3,3,0,1,2,3,0,0,2,2,1,0,0,1,2,3,2,1 },
                { 0,2,3,1,0,3,1,1,2,1,2,3,3,1,3,3,2,3,1,0,2,3,1,1,1,3,3,1,2,2,2,3,3,1,2,2,2,0,3,0,1,3,0,3,0,3,2,0,2,0,1,3,2,3,3,2,0,0,2,2,0,1,2,1,2,2,0,2,1,3,0,2,3,2,3,3,1,3,3,1 },
                { 3,3,3,0,0,2,1,0,0,3,1,2,0,0,1,0,3,3,0,1,0,1,3,0,3,1,3,1,0,0,2,0,1,3,3,0,2,0,0,3,0,1,2,2,1,3,3,0,0,3,1,2,1,0,2,0,1,1,0,0,2,0,2,2,1,1,1,3,3,1,3,0,0,0,3,1,3,1,2,3 },
                { 0,2,2,1,3,0,2,1,3,2,0,3,1,3,3,2,3,2,3,2,1,1,2,0,0,3,2,0,3,0,1,0,3,1,1,2,2,0,2,0,0,0,1,0,1,2,0,1,1,2,0,3,3,0,2,3,2,3,1,1,2,2,3,1,3,2,0,1,1,2,0,1,1,1,1,3,0,2,3,1 },
                { 2,0,3,1,1,3,2,2,0,3,1,1,3,3,0,0,1,3,0,1,0,1,3,2,0,1,0,0,3,2,0,1,3,3,3,0,3,2,0,2,1,0,1,0,2,2,0,2,0,0,1,1,1,2,2,1,1,0,1,0,0,1,3,2,3,2,2,2,0,2,3,3,1,2,3,3,3,3,2,0 },
                { 3,2,3,1,2,3,0,0,0,2,0,0,2,1,1,1,0,0,1,1,1,3,3,0,1,1,0,1,2,1,1,1,3,3,0,1,3,0,2,0,2,0,2,0,1,2,2,0,1,1,2,0,0,2,1,1,2,3,3,2,1,2,2,1,1,0,3,2,0,3,0,3,0,2,3,3,2,2,3,3 }
            });

            GameObject tank = GameObjectPrefabManager.InstantiateType(PrefabType.TankModelOnly, Game, new Vector3(-3.5f, -3, 0));
            tank.Transform.Rotation *= Quaternion.CreateFromAxisAngle(Vector3.UnitY, MathHelper.ToRadians(140.0f));

            GameObject tower;
            tower = GameObjectPrefabManager.InstantiateType(PrefabType.TurretTowerModelOnly, Game, new Vector3(10, 10, 0));
            tower.Transform.Rotation *= Quaternion.CreateFromAxisAngle(Vector3.UnitY, MathHelper.ToRadians(90.0f));

            tower = GameObjectPrefabManager.InstantiateType(PrefabType.TurretTowerModelOnly, Game, new Vector3(-12, 16, 0));
            tower.Transform.Rotation *= Quaternion.CreateFromAxisAngle(Vector3.UnitY, MathHelper.ToRadians(-90.0f));

            tower = GameObjectPrefabManager.InstantiateType(PrefabType.TurretTowerModelOnly, Game, new Vector3(18, 70, 0));
            tower.Transform.Rotation *= Quaternion.CreateFromAxisAngle(Vector3.UnitY, MathHelper.ToRadians(90.0f));

            tower = GameObjectPrefabManager.InstantiateType(PrefabType.TurretTowerModelOnly, Game, new Vector3(-15, 80, 0));
            tower.Transform.Rotation *= Quaternion.CreateFromAxisAngle(Vector3.UnitY, MathHelper.ToRadians(-90.0f));

            GameObjectPrefabManager.InstantiateType(PrefabType.TreeSingle, Game, new Vector3(-2.8f, -12.5f, 0));
            GameObjectPrefabManager.InstantiateType(PrefabType.TreeDouble, Game, new Vector3(-8, 0, 0));
            GameObjectPrefabManager.InstantiateType(PrefabType.TreeDouble, Game, new Vector3(-5, -8, 0));
            GameObjectPrefabManager.InstantiateType(PrefabType.TreeSingle, Game, new Vector3(1.8f, -12.8f, 0));
            GameObjectPrefabManager.InstantiateType(PrefabType.TreeSingle, Game, new Vector3(4.5f, -5f, 0));
            GameObjectPrefabManager.InstantiateType(PrefabType.TreeSingle, Game, new Vector3(10, 3, 0));
            GameObjectPrefabManager.InstantiateType(PrefabType.TreeSingle, Game, new Vector3(4, -10, 0));
            GameObjectPrefabManager.InstantiateType(PrefabType.TreeDouble, Game, new Vector3(13, 6, 0));

            //background
            GameObjectPrefabManager.InstantiateType(PrefabType.TreeSingle, Game, new Vector3(-2f, 90, 0));
            GameObjectPrefabManager.InstantiateType(PrefabType.TreeSingle, Game, new Vector3(12f, 70, 0));
            GameObjectPrefabManager.InstantiateType(PrefabType.TreeDouble, Game, new Vector3(5f, 65, 0));
            GameObjectPrefabManager.InstantiateType(PrefabType.TreeSingle, Game, new Vector3(8f, 70, 0));
            GameObjectPrefabManager.InstantiateType(PrefabType.TreeDouble, Game, new Vector3(-10f, 60, 0));
            GameObjectPrefabManager.InstantiateType(PrefabType.TreeSingle, Game, new Vector3(0, 75, 0));
            GameObjectPrefabManager.InstantiateType(PrefabType.TreeDouble, Game, new Vector3(2, 55, 0));
            GameObjectPrefabManager.InstantiateType(PrefabType.TreeSingle, Game, new Vector3(-4f, 60, 0));
            GameObjectPrefabManager.InstantiateType(PrefabType.TreeDouble, Game, new Vector3(-5f, 70, 0));
            GameObjectPrefabManager.InstantiateType(PrefabType.TreeDouble, Game, new Vector3(11, 40, 0));
            GameObjectPrefabManager.InstantiateType(PrefabType.TreeSingle, Game, new Vector3(15, 45, 0));
            GameObjectPrefabManager.InstantiateType(PrefabType.TreeDouble, Game, new Vector3(17, 40, 0));
            GameObjectPrefabManager.InstantiateType(PrefabType.TreeDouble, Game, new Vector3(-11, 75, 0));
            GameObjectPrefabManager.InstantiateType(PrefabType.TreeSingle, Game, new Vector3(-16f, 75, 0));
            GameObjectPrefabManager.InstantiateType(PrefabType.TreeDouble, Game, new Vector3(-15, 40, 0));
            GameObjectPrefabManager.InstantiateType(PrefabType.TreeDouble, Game, new Vector3(-10.2f, 21, 0));
            GameObjectPrefabManager.InstantiateType(PrefabType.TreeDouble, Game, new Vector3(10.2f, 21, 0));
            GameObjectPrefabManager.InstantiateType(PrefabType.TreeDouble, Game, new Vector3(-22f, 21, 0));
            GameObjectPrefabManager.InstantiateType(PrefabType.TreeSingle, Game, new Vector3(-25f, 30, 0));
            GameObjectPrefabManager.InstantiateType(PrefabType.TreeDouble, Game, new Vector3(-22f, 30, 0));
            GameObjectPrefabManager.InstantiateType(PrefabType.TreeSingle, Game, new Vector3(-17f, 16, 0));
            GameObjectPrefabManager.InstantiateType(PrefabType.TreeDouble, Game, new Vector3(22f, 21, 0));
            GameObjectPrefabManager.InstantiateType(PrefabType.TreeSingle, Game, new Vector3(25f, 30, 0));
            GameObjectPrefabManager.InstantiateType(PrefabType.TreeDouble, Game, new Vector3(22f, 30, 0));
            GameObjectPrefabManager.InstantiateType(PrefabType.TreeSingle, Game, new Vector3(17f, 16, 0));
            GameObjectPrefabManager.InstantiateType(PrefabType.TreeDouble, Game, new Vector3(6f, 45, 0));
            GameObjectPrefabManager.InstantiateType(PrefabType.TreeSingle, Game, new Vector3(10f, 45, 0));
            GameObjectPrefabManager.InstantiateType(PrefabType.TreeDouble, Game, new Vector3(-13f, 45, 0));
            GameObjectPrefabManager.InstantiateType(PrefabType.TreeSingle, Game, new Vector3(0.5f, 20, 0));
            GameObjectPrefabManager.InstantiateType(PrefabType.TreeDouble, Game, new Vector3(5, 25, 0));
            GameObjectPrefabManager.InstantiateType(PrefabType.TreeSingle, Game, new Vector3(-6f, 45, 0));
            GameObjectPrefabManager.InstantiateType(PrefabType.TreeDouble, Game, new Vector3(-9f, 23, 0));
            GameObjectPrefabManager.InstantiateType(PrefabType.TreeSingle, Game, new Vector3(-8.5f, 30, 0));
            GameObjectPrefabManager.InstantiateType(PrefabType.TreeSingle, Game, new Vector3(-5f, 24, 0));
        }

        public override void Start()
        {
            (Game as GameFireStorm).MenuUI.SetActive(true);
        }

        public override void UnloadContent()
        {
            
        }
    }
}
